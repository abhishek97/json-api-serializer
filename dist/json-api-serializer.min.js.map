{"version":3,"file":"json-api-serializer.min.js","sources":["../node_modules/setimmediate/setImmediate.js","../node_modules/lodash.set/index.js","../lib/helpers.js","../lib/validator.js","../lib/JSONAPISerializer.js"],"sourcesContent":["(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6â€“8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","/* eslint-disable no-sequences */\n/* eslint-disable no-return-assign */\n\nconst set = require('lodash.set');\n\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_get\nconst get = (obj, path, defaultValue) =>\n  String.prototype.split\n    .call(path, /[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce((a, c) => (Object.hasOwnProperty.call(a, c) ? a[c] : defaultValue), obj);\n\nconst pick = (obj, arr) =>\n  arr.reduce((acc, curr) => (curr in obj && (acc[curr] = obj[curr]), acc), {});\n\nconst isEmpty = val => val == null || !(Object.keys(val) || val).length;\n\nconst omit = (obj, arr) =>\n  Object.keys(obj)\n    .filter(k => !arr.includes(k))\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\n\nconst isPlainObject = val => !!val && typeof val === 'object' && val.constructor === Object;\n\nconst transform = (obj, fn, acc) => Object.keys(obj).reduce((a, k) => fn(a, obj[k], k, obj), acc);\n\nconst toKebabCase = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n\nconst toSnakeCase = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('_');\n\nconst toCamelCase = str => {\n  const s =\n    str &&\n    str\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n      .map(x => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())\n      .join('');\n  return s.slice(0, 1).toLowerCase() + s.slice(1);\n};\n\nmodule.exports = {\n  get,\n  set,\n  pick,\n  isEmpty,\n  omit,\n  isPlainObject,\n  transform,\n  toKebabCase,\n  toSnakeCase,\n  toCamelCase\n};\n","/**\n * Validate and apply default values to resource's configuration options.\n *\n * @method validateOptions\n * @private\n * @param {Object} options Configuration options.\n * @return {Object}\n */\nfunction validateOptions(options) {\n  options = Object.assign(\n    {\n      id: 'id',\n      blacklist: [],\n      whitelist: [],\n      links: {},\n      relationships: {},\n      topLevelLinks: {},\n      topLevelMeta: {},\n      meta: {},\n      blacklistOnDeserialize: [],\n      whitelistOnDeserialize: [],\n      jsonapiObject: true\n    },\n    options\n  );\n\n  if (!Array.isArray(options.blacklist)) throw new Error(\"option 'blacklist' must be an array\");\n  if (!Array.isArray(options.whitelist)) throw new Error(\"option 'whitelist' must be an array\");\n  if (typeof options.links !== 'object' && typeof options.links !== 'function')\n    throw new Error(\"option 'links' must be an object or a function\");\n  if (!Array.isArray(options.blacklistOnDeserialize))\n    throw new Error(\"option 'blacklistOnDeserialize' must be an array\");\n  if (!Array.isArray(options.whitelistOnDeserialize))\n    throw new Error(\"option 'whitelistOnDeserialize' must be an array\");\n  if (\n    options.topLevelLinks &&\n    typeof options.topLevelLinks !== 'object' &&\n    typeof options.topLevelLinks !== 'function'\n  )\n    throw new Error(\"option 'topLevelLinks' must be an object or a function\");\n  if (\n    options.topLevelMeta &&\n    typeof options.topLevelMeta !== 'object' &&\n    typeof options.topLevelMeta !== 'function'\n  )\n    throw new Error(\"option 'topLevelMeta' must be an object or a function\");\n  if (options.meta && typeof options.meta !== 'object' && typeof options.meta !== 'function')\n    throw new Error(\"option 'meta' must be an object or a function\");\n  if (typeof options.jsonapiObject !== 'boolean')\n    throw new Error(\"option 'jsonapiObject' must a boolean\");\n  if (\n    options.convertCase &&\n    !['kebab-case', 'snake_case', 'camelCase'].includes(options.convertCase)\n  )\n    throw new Error(\"option 'convertCase' must be one of 'kebab-case', 'snake_case', 'camelCase'\");\n\n  if (\n    options.unconvertCase &&\n    !['kebab-case', 'snake_case', 'camelCase'].includes(options.unconvertCase)\n  )\n    throw new Error(\n      \"option 'unconvertCase' must be one of 'kebab-case', 'snake_case', 'camelCase'\"\n    );\n\n  const { relationships } = options;\n  Object.keys(relationships).forEach(key => {\n    relationships[key] = Object.assign(\n      { schema: 'default', links: {}, meta: {} },\n      relationships[key]\n    );\n\n    if (!relationships[key].type)\n      throw new Error(`option 'type' for relationship '${key}' is required`);\n    if (\n      typeof relationships[key].type !== 'string' &&\n      typeof relationships[key].type !== 'function'\n    )\n      throw new Error(`option 'type' for relationship '${key}' must be a string or a function`);\n    if (relationships[key].alternativeKey && typeof relationships[key].alternativeKey !== 'string')\n      throw new Error(`option 'alternativeKey' for relationship '${key}' must be a string`);\n\n    if (relationships[key].schema && typeof relationships[key].schema !== 'string')\n      throw new Error(`option 'schema' for relationship '${key}' must be a string`);\n\n    if (\n      typeof relationships[key].links !== 'object' &&\n      typeof relationships[key].links !== 'function'\n    )\n      throw new Error(`option 'links' for relationship '${key}' must be an object or a function`);\n\n    if (\n      typeof relationships[key].meta !== 'object' &&\n      typeof relationships[key].meta !== 'function'\n    )\n      throw new Error(`option 'meta' for relationship '${key}' must be an object or a function`);\n\n    if (relationships[key].deserialize && typeof relationships[key].deserialize !== 'function')\n      throw new Error(`option 'deserialize' for relationship '${key}' must be a function`);\n  });\n\n  return options;\n}\n\n/**\n * Validate and apply default values to the dynamic type object option.\n *\n * @method validateDynamicTypeOptions\n * @private\n * @param {Object} options dynamic type object option.\n * @return {Object}\n */\nfunction validateDynamicTypeOptions(options) {\n  options = Object.assign({ topLevelLinks: {}, topLevelMeta: {}, jsonapiObject: true }, options);\n\n  if (!options.type) throw new Error(\"option 'type' is required\");\n  if (typeof options.type !== 'string' && typeof options.type !== 'function') {\n    throw new Error(\"option 'type' must be a string or a function\");\n  }\n\n  if (\n    options.topLevelLinks &&\n    typeof options.topLevelLinks !== 'object' &&\n    typeof options.topLevelLinks !== 'function'\n  )\n    throw new Error(\"option 'topLevelLinks' must be an object or a function\");\n  if (\n    options.topLevelMeta &&\n    typeof options.topLevelMeta !== 'object' &&\n    typeof options.topLevelMeta !== 'function'\n  )\n    throw new Error(\"option 'topLevelMeta' must be an object or a function\");\n  if (options.meta && typeof options.meta !== 'object' && typeof options.meta !== 'function')\n    throw new Error(\"option 'meta' must be an object or a function\");\n  if (typeof options.jsonapiObject !== 'boolean')\n    throw new Error(\"option 'jsonapiObject' must a boolean\");\n\n  return options;\n}\n\n/**\n * Validate a JSONAPI error object\n *\n * @method validateError\n * @private\n * @param {Object} err a JSONAPI error object\n * @return {Object}\n */\nfunction validateError(err) {\n  if (typeof err !== 'object') {\n    throw new Error('error must be an object');\n  }\n\n  const { id, links, status, code, title, detail, source, meta } = err;\n\n  const isValidLink = function isValidLink(linksObj) {\n    if (typeof linksObj !== 'object') {\n      throw new Error(\"error 'link' property must be an object\");\n    }\n\n    Object.keys(linksObj).forEach(key => {\n      if (typeof linksObj[key] !== 'object' && typeof linksObj[key] !== 'string') {\n        throw new Error(`error 'links.${key}' must be a string or an object`);\n      }\n\n      if (typeof linksObj[key] === 'object') {\n        if (linksObj[key].href && typeof linksObj[key].href !== 'string') {\n          throw new Error(`'links.${key}.href' property must be a string`);\n        }\n\n        if (linksObj[key].meta && typeof linksObj[key].meta !== 'object') {\n          throw new Error(`'links.${key}.meta' property must be an object`);\n        }\n      }\n    });\n\n    return links;\n  };\n\n  const isValidSource = function isValidSource(sourceObj) {\n    if (typeof sourceObj !== 'object') {\n      throw new Error(\"error 'source' property must be an object\");\n    }\n\n    if (sourceObj.pointer && typeof sourceObj.pointer !== 'string') {\n      throw new Error(\"error 'source.pointer' property must be a string\");\n    }\n\n    if (sourceObj.parameter && typeof sourceObj.parameter !== 'string') {\n      throw new Error(\"error 'source.parameter' property must be a string\");\n    }\n\n    return source;\n  };\n\n  const error = {};\n  if (id) error.id = id.toString();\n  if (links) error.links = isValidLink(links);\n  if (status) error.status = status.toString();\n  if (code) error.code = code.toString();\n  if (title) error.title = title.toString();\n  if (detail) error.detail = detail.toString();\n  if (source) error.source = isValidSource(source);\n  if (meta) error.meta = meta;\n\n  return error;\n}\n\nmodule.exports = {\n  validateOptions,\n  validateDynamicTypeOptions,\n  validateError\n};\n","require('setimmediate');\n\nconst {\n  pick,\n  isEmpty,\n  omit,\n  isPlainObject,\n  transform,\n  get,\n  set,\n  toCamelCase,\n  toKebabCase,\n  toSnakeCase\n} = require('./helpers');\n\nconst { validateOptions, validateDynamicTypeOptions, validateError } = require('./validator');\n\n/**\n * JSONAPISerializer class.\n *\n * @example\n * const JSONAPISerializer = require('json-api-serializer');\n *\n * // Create an instance of JSONAPISerializer with default settings\n * const serializer = new JSONAPISerializer();\n *\n * @class JSONAPISerializer\n * @param {Object} [opts] Global options.\n */\nmodule.exports = class JSONAPISerializer {\n  constructor(opts) {\n    this.opts = opts || {};\n    this.schemas = {};\n  }\n\n  /**\n   * Register a resource with its type, schema name, and configuration options.\n   *\n   * @method JSONAPISerializer#register\n   * @param {string} type resource's type.\n   * @param {string} [schema=default] schema name.\n   * @param {Object} [options] options.\n   */\n  register(type, schema, options) {\n    if (typeof schema === 'object') {\n      options = schema;\n      schema = 'default';\n    }\n\n    schema = schema || 'default';\n    options = Object.assign({}, this.opts, options);\n\n    this.schemas[type] = this.schemas[type] || {};\n    this.schemas[type][schema] = validateOptions(options);\n  }\n\n  /**\n   * Serialze input data to a JSON API compliant response.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-top-level}\n   * @method JSONAPISerializer#serialize\n   * @param {string|Object} type resource's type as string or a dynamic type options as object.\n   * @param {Object|Object[]} data input data.\n   * @param {string} [schema=default] resource's schema name.\n   * @param {Object} [extraData] additional data that can be used in topLevelMeta options.\n   * @return {Object} serialized data.\n   */\n  serialize(type, data, schema, extraData) {\n    // Support optional arguments (schema)\n    if (arguments.length === 3) {\n      if (typeof schema === 'object') {\n        extraData = schema;\n        schema = 'default';\n      }\n    }\n\n    schema = schema || 'default';\n    extraData = extraData || {};\n\n    const included = new Map();\n    const isDynamicType = typeof type === 'object';\n    let options;\n\n    if (isDynamicType) {\n      // Dynamic type option\n      options = validateDynamicTypeOptions(type);\n    } else {\n      // Serialize data with the defined type\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n\n      options = this.schemas[type][schema];\n    }\n\n    return {\n      jsonapi: options.jsonapiObject ? { version: '1.0' } : undefined,\n      meta: this.processOptionsValues(data, extraData, options.topLevelMeta, 'extraData'),\n      links: this.processOptionsValues(data, extraData, options.topLevelLinks, 'extraData'),\n      data: isDynamicType\n        ? this.serializeMixedResource(options, data, included, extraData)\n        : this.serializeResource(type, data, options, included, extraData),\n      included: included.size ? [...included.values()] : undefined\n    };\n  }\n\n  /**\n   * Asynchronously serialize input data to a JSON API compliant response.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-top-level}\n   * @method JSONAPISerializer#serializeAsync\n   * @param {string} type resource's type.\n   * @param {Object|Object[]} data input data.\n   * @param {string} [schema=default] resource's schema name.\n   * @param {Object} [extraData] additional data that can be used in topLevelMeta options.\n   * @return {Promise} resolves with serialized data.\n   */\n  serializeAsync(type, data, schema, extraData) {\n    // Support optional arguments (schema)\n    if (arguments.length === 3) {\n      if (typeof schema === 'object') {\n        extraData = schema;\n        schema = 'default';\n      }\n    }\n\n    schema = schema || 'default';\n    extraData = extraData || {};\n\n    const included = new Map();\n    const isDataArray = Array.isArray(data);\n    const isDynamicType = typeof type === 'object';\n    const arrayData = isDataArray ? data : [data];\n    const serializedData = [];\n    const that = this;\n    let i = 0;\n    let options;\n\n    if (isDynamicType) {\n      options = validateDynamicTypeOptions(type);\n    } else {\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n\n      options = this.schemas[type][schema];\n    }\n\n    return new Promise((resolve, reject) => {\n      function next() {\n        setImmediate(() => {\n          if (i >= arrayData.length) {\n            return resolve(serializedData);\n          }\n\n          try {\n            // Serialize a single item of the data-array.\n            const serializedItem = isDynamicType\n              ? that.serializeMixedResource(type, arrayData[i], included, extraData)\n              : that.serializeResource(type, arrayData[i], options, included, extraData);\n\n            if (serializedItem !== null) {\n              serializedData.push(serializedItem);\n            }\n\n            i += 1;\n\n            return next();\n          } catch (e) {\n            return reject(e);\n          }\n        });\n      }\n\n      next();\n    }).then(result => ({\n      jsonapi: options.jsonapiObject ? { version: '1.0' } : undefined,\n      meta: this.processOptionsValues(data, extraData, options.topLevelMeta, 'extraData'),\n      links: this.processOptionsValues(data, extraData, options.topLevelLinks, 'extraData'),\n      // If the source data was an array, we just pass the serialized data array.\n      // Otherwise we try to take the first (and only) item of it or pass null.\n      data: isDataArray ? result : result[0] || null,\n      included: included.size ? [...included.values()] : undefined\n    }));\n  }\n\n  /**\n   * Deserialize JSON API document data.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @method JSONAPISerializer#deserialize\n   * @param {string|Object} type resource's type as string or an object with a dynamic type resolved from data.\n   * @param {Object} data JSON API input data.\n   * @param {string} [schema=default] resource's schema name.\n   * @return {Object} deserialized data.\n   */\n  deserialize(type, data, schema) {\n    schema = schema || 'default';\n\n    if (typeof type === 'object') {\n      type = validateDynamicTypeOptions(type);\n    } else {\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n    }\n\n    let deserializedData = {};\n\n    if (data.data) {\n      deserializedData = Array.isArray(data.data)\n        ? data.data.map(resource => this.deserializeResource(type, resource, schema, data.included))\n        : this.deserializeResource(type, data.data, schema, data.included);\n    }\n\n    return deserializedData;\n  }\n\n  /**\n   * Asynchronously Deserialize JSON API document data.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @method JSONAPISerializer#deserializeAsync\n   * @param {string|Object} type resource's type as string or an object with a dynamic type resolved from data.\n   * @param {Object} data JSON API input data.\n   * @param {string} [schema=default] resource's schema name.\n   * @return {Promise} resolves with serialized data.\n   */\n  deserializeAsync(type, data, schema) {\n    schema = schema || 'default';\n\n    if (typeof type === 'object') {\n      type = validateDynamicTypeOptions(type);\n    } else {\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n    }\n\n    const isDataArray = Array.isArray(data.data);\n    let i = 0;\n    const arrayData = isDataArray ? data.data : [data.data];\n    const deserializedData = [];\n    const that = this;\n\n    return new Promise((resolve, reject) => {\n      function next() {\n        setImmediate(() => {\n          if (i >= arrayData.length) {\n            return resolve(isDataArray ? deserializedData : deserializedData[0]);\n          }\n\n          try {\n            // Serialize a single item of the data-array.\n            const deserializedItem = that.deserializeResource(\n              type,\n              arrayData[i],\n              schema,\n              data.included\n            );\n\n            deserializedData.push(deserializedItem);\n\n            i += 1;\n\n            return next();\n          } catch (e) {\n            return reject(e);\n          }\n        });\n      }\n\n      next();\n    });\n  }\n\n  /**\n   * Serialize any error into a JSON API error document.\n   * Input data can be:\n   *  - An Error or an array of Error.\n   *  - A JSON API error object or an array of JSON API error object.\n   *\n   * @see {@link http://jsonapi.org/format/#errors}\n   * @method JSONAPISerializer#serializeError\n   * @param {Error|Error[]|Object|Object[]} error an Error, an array of Error, a JSON API error object, an array of JSON API error object\n   * @return {Promise} resolves with serialized error.\n   */\n  serializeError(error) {\n    function convertToError(err) {\n      let serializedError;\n\n      if (err instanceof Error) {\n        const status = err.status || err.statusCode;\n\n        serializedError = {\n          status: status && status.toString(),\n          code: err.code,\n          detail: err.message\n        };\n      } else {\n        serializedError = validateError(err);\n      }\n\n      return serializedError;\n    }\n\n    return {\n      errors: Array.isArray(error) ? error.map(err => convertToError(err)) : [convertToError(error)]\n    };\n  }\n\n  /**\n   * Deserialize a single JSON API resource.\n   * Input data must be a simple object.\n   *\n   * @method JSONAPISerializer#deserializeResource\n   * @param {string|Object} type resource's type as string or an object with a dynamic type resolved from data.\n   * @param {Object} data JSON API resource data.\n   * @param {string} [schema=default] resource's schema name.\n   * @param {Map<string:Object>} included.\n   * @return {Object} deserialized data.\n   */\n  deserializeResource(type, data, schema, included) {\n    if (typeof type === 'object') {\n      type = typeof type.type === 'function' ? type.type(data) : get(data, type.type);\n\n      if (!type) {\n        throw new Error(`No type can be resolved from data: ${JSON.stringify(data)}`);\n      }\n\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      schema = 'default';\n    }\n\n    const options = this.schemas[type][schema];\n\n    let deserializedData = {};\n    deserializedData[options.id] = data.id || undefined;\n\n    if (data.attributes && options.whitelistOnDeserialize.length) {\n      data.attributes = pick(data.attributes, options.whitelistOnDeserialize);\n    }\n\n    if (data.attributes && options.blacklistOnDeserialize.length) {\n      data.attributes = omit(data.attributes, options.blacklistOnDeserialize);\n    }\n\n    Object.assign(deserializedData, data.attributes);\n\n    // Deserialize relationships\n    if (data.relationships) {\n      Object.keys(data.relationships).forEach(relationshipProperty => {\n        const relationship = data.relationships[relationshipProperty];\n\n        let relationshipKey = options.unconvertCase\n          ? this._convertCase(relationshipProperty, options.unconvertCase)\n          : relationshipProperty;\n\n        // Support alternativeKey options for relationships\n        if (\n          options.relationships[relationshipKey] &&\n          options.relationships[relationshipKey].alternativeKey\n        ) {\n          relationshipKey = options.relationships[relationshipKey].alternativeKey;\n        }\n\n        const deserializeFunction = relationshipData => {\n          if (\n            options.relationships[relationshipKey] &&\n            options.relationships[relationshipProperty].deserialize\n          ) {\n            return options.relationships[relationshipProperty].deserialize(relationshipData);\n          }\n          return relationshipData.id;\n        };\n\n        if (relationship.data !== undefined) {\n          if (Array.isArray(relationship.data)) {\n            set(\n              deserializedData,\n              relationshipKey,\n              relationship.data.map(d =>\n                included\n                  ? this.deserializeIncluded(\n                      d.type,\n                      d.id,\n                      options.relationships[relationshipProperty],\n                      included\n                    )\n                  : deserializeFunction(d)\n              )\n            );\n          } else if (relationship.data === null) {\n            // null data\n            set(deserializedData, relationshipKey, null);\n          } else {\n            set(\n              deserializedData,\n              relationshipKey,\n              included\n                ? this.deserializeIncluded(\n                    relationship.data.type,\n                    relationship.data.id,\n                    options.relationships[relationshipProperty],\n                    included\n                  )\n                : deserializeFunction(relationship.data)\n            );\n          }\n        }\n      });\n    }\n\n    if (options.unconvertCase) {\n      deserializedData = this._convertCase(deserializedData, options.unconvertCase);\n    }\n\n    if (data.links) {\n      deserializedData.links = data.links;\n    }\n\n    if (data.meta) {\n      deserializedData.meta = data.meta;\n    }\n\n    return deserializedData;\n  }\n\n  deserializeIncluded(type, id, relationshipOpts, included) {\n    const includedResource = included.find(\n      resource => resource.type === type && resource.id === id\n    );\n\n    if (!includedResource) {\n      return id;\n    }\n\n    return this.deserializeResource(type, includedResource, relationshipOpts.schema, included);\n  }\n\n  /**\n   * Serialize resource objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-objects}\n   * @method JSONAPISerializer#serializeDocument\n   * @private\n   * @param {string} type resource's type.\n   * @param {Object|Object[]} data input data.\n   * @param {options} options resource's configuration options.\n   * @param {Map<string:Object>} included.\n   * @param {Object} extraData additional data.\n   * @return {Object|Object[]} serialized data.\n   */\n  serializeResource(type, data, options, included, extraData) {\n    if (isEmpty(data)) {\n      // Return [] or null\n      return Array.isArray(data) ? data : null;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(d => this.serializeResource(type, d, options, included, extraData));\n    }\n\n    return {\n      type,\n      id: data[options.id] ? data[options.id].toString() : undefined,\n      attributes: this.serializeAttributes(data, options),\n      relationships: this.serializeRelationships(data, options, included, extraData),\n      meta: this.processOptionsValues(data, extraData, options.meta),\n      links: this.processOptionsValues(data, extraData, options.links)\n    };\n  }\n\n  /**\n   * Serialize mixed resource object with a dynamic type resolved from data\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-objects}\n   * @method JSONAPISerializer#serializeMixedResource\n   * @private\n   * @param {Object} typeOption a dynamic type options.\n   * @param {Object|Object[]} data input data.\n   * @param {Map<string:Object>} included.\n   * @param {Object} extraData additional data.\n   * @return {Object|Object[]} serialized data.\n   */\n  serializeMixedResource(typeOption, data, included, extraData) {\n    if (isEmpty(data)) {\n      // Return [] or null\n      return Array.isArray(data) ? data : null;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(d => this.serializeMixedResource(typeOption, d, included, extraData));\n    }\n\n    // Resolve type from data (can be a string or a function deriving a type-string from each data-item)\n    const type =\n      typeof typeOption.type === 'function' ? typeOption.type(data) : get(data, typeOption.type);\n\n    if (!type) {\n      throw new Error(`No type can be resolved from data: ${JSON.stringify(data)}`);\n    }\n\n    if (!this.schemas[type]) {\n      throw new Error(`No type registered for ${type}`);\n    }\n\n    return this.serializeResource(type, data, this.schemas[type].default, included, extraData);\n  }\n\n  /**\n   * Serialize 'attributes' key of resource objects: an attributes object representing some of the resource's data.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-object-attributes}\n   * @method JSONAPISerializer#serializeAttributes\n   * @private\n   * @param {Object|Object[]} data input data.\n   * @param {Object} options resource's configuration options.\n   * @return {Object} serialized attributes.\n   */\n  serializeAttributes(data, options) {\n    if (options.whitelist && options.whitelist.length) {\n      data = pick(data, options.whitelist);\n    }\n\n    // Support alternativeKey options for relationships\n    const alternativeKeys = [];\n    Object.keys(options.relationships).forEach(key => {\n      const rOptions = options.relationships[key];\n      if (rOptions.alternativeKey) {\n        alternativeKeys.push(rOptions.alternativeKey);\n      }\n    });\n\n    // Remove unwanted keys\n    let serializedAttributes = omit(data, [\n      options.id,\n      ...Object.keys(options.relationships),\n      ...alternativeKeys,\n      ...options.blacklist\n    ]);\n\n    if (options.convertCase) {\n      serializedAttributes = this._convertCase(serializedAttributes, options.convertCase);\n    }\n\n    return Object.keys(serializedAttributes).length ? serializedAttributes : undefined;\n  }\n\n  /**\n   * Serialize 'relationships' key of resource objects: a relationships object describing relationships between the resource and other JSON API resources.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-object-relationships}\n   * @method JSONAPISerializer#serializeRelationships\n   * @private\n   * @param {Object|Object[]} data input data.\n   * @param {Object} options resource's configuration options.\n   * @param {Map<string:Object>} included.\n   * @param {Object} extraData additional data.\n   * @return {Object} serialized relationships.\n   */\n  serializeRelationships(data, options, included, extraData) {\n    const serializedRelationships = {};\n\n    Object.keys(options.relationships).forEach(relationship => {\n      const relationshipOptions = options.relationships[relationship];\n\n      // Support alternativeKey options for relationships\n      let relationshipKey = relationship;\n      if (!data[relationship] && relationshipOptions.alternativeKey) {\n        relationshipKey = relationshipOptions.alternativeKey;\n      }\n\n      let serializeRelationship = {\n        links: this.processOptionsValues(data, extraData, relationshipOptions.links),\n        meta: this.processOptionsValues(data, extraData, relationshipOptions.meta),\n        data: this.serializeRelationship(\n          relationshipOptions.type,\n          relationshipOptions.schema,\n          get(data, relationshipKey),\n          included,\n          data,\n          extraData\n        )\n      };\n\n      // Avoid empty relationship object\n      if (\n        serializeRelationship.data === undefined &&\n        serializeRelationship.links === undefined &&\n        serializeRelationship.meta === undefined\n      ) {\n        serializeRelationship = {\n          data: null\n        };\n      }\n\n      // Convert case\n      relationship = options.convertCase\n        ? this._convertCase(relationship, options.convertCase)\n        : relationship;\n\n      serializedRelationships[relationship] = serializeRelationship;\n    });\n\n    return Object.keys(serializedRelationships).length ? serializedRelationships : undefined;\n  }\n\n  /**\n   * Serialize 'data' key of relationship's resource objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-object-linkage}\n   * @method JSONAPISerializer#serializeRelationship\n   * @private\n   * @param {string|Function} rType the relationship's type.\n   * @param {string} rSchema the relationship's schema\n   * @param {Object|Object[]} rData relationship's data.\n   * @param {Map<string:Object>} included.\n   * @param {Object} the entire resource's data.\n   * @param {Object} extraData additional data.\n   * @return {Object|Object[]} serialized relationship data.\n   */\n  serializeRelationship(rType, rSchema, rData, included, data, extraData) {\n    included = included || new Map();\n    const schema = rSchema || 'default';\n\n    // No relationship data\n    if (rData === undefined || rData === null) {\n      return rData;\n    }\n\n    if (typeof rData === 'object' && isEmpty(rData)) {\n      // Return [] or null\n      return Array.isArray(rData) ? [] : null;\n    }\n\n    if (Array.isArray(rData)) {\n      return rData.map(d =>\n        this.serializeRelationship(rType, schema, d, included, data, extraData)\n      );\n    }\n\n    // Resolve relationship type\n    const type = typeof rType === 'function' ? rType(rData, data) : rType;\n\n    if (!type) {\n      throw new Error(`No type can be resolved from relationship's data: ${JSON.stringify(rData)}`);\n    }\n\n    if (!this.schemas[type]) {\n      throw new Error(`No type registered for \"${type}\"`);\n    }\n\n    if (!this.schemas[type][schema]) {\n      throw new Error(`No schema \"${schema}\" registered for type \"${type}\"`);\n    }\n\n    const rOptions = this.schemas[type][schema];\n    const serializedRelationship = { type };\n\n    // Support for unpopulated relationships (an id, or array of ids)\n    if (!isPlainObject(rData)) {\n      serializedRelationship.id = rData.toString();\n    } else {\n      // Relationship has been populated\n      serializedRelationship.id = rData[rOptions.id].toString();\n      included.set(\n        `${type}-${serializedRelationship.id}`,\n        this.serializeResource(type, rData, rOptions, included, extraData)\n      );\n    }\n    return serializedRelationship;\n  }\n\n  /**\n   * Process options values.\n   * Allows options to be an object or a function with 1 or 2 arguments\n   *\n   * @method JSONAPISerializer#processOptionsValues\n   * @private\n   * @param {Object} data data passed to functions options\n   * @param {Object} extraData additional data passed to functions options\n   * @param {Object} options configuration options.\n   * @param {string} fallbackModeIfOneArg fallback mode if only one argument is passed to function.\n   * Avoid breaking changes with issue https://github.com/danivek/json-api-serializer/issues/27.\n   * @return {Object}\n   */\n  processOptionsValues(data, extraData, options, fallbackModeIfOneArg) {\n    let processedOptions = {};\n    if (options && typeof options === 'function') {\n      // Backward compatible with functions with one 'extraData' argument\n      processedOptions =\n        fallbackModeIfOneArg === 'extraData' && options.length === 1\n          ? options(extraData)\n          : options(data, extraData);\n    } else {\n      Object.keys(options).forEach(key => {\n        let processedValue = {};\n        if (options[key] && typeof options[key] === 'function') {\n          // Backward compatible with functions with one 'extraData' argument\n          processedValue =\n            fallbackModeIfOneArg === 'extraData' && options[key].length === 1\n              ? options[key](extraData)\n              : options[key](data, extraData);\n        } else {\n          processedValue = options[key];\n        }\n        Object.assign(processedOptions, { [key]: processedValue });\n      });\n    }\n\n    return processedOptions && Object.keys(processedOptions).length ? processedOptions : undefined;\n  }\n\n  /**\n   * Recursively convert object keys case\n   *\n   * @method JSONAPISerializer#_convertCase\n   * @private\n   * @param {Object|Object[]|string} data to convert\n   * @param {string} convertCaseOptions can be snake_case', 'kebab-case' or 'camelCase' format.\n   * @return {Object}\n   */\n  _convertCase(data, convertCaseOptions) {\n    let converted;\n    if (typeof data === 'object') {\n      converted = transform(\n        data,\n        (result, value, key) => {\n          if (typeof value === 'object') {\n            result[this._convertCase(key, convertCaseOptions)] = this._convertCase(\n              value,\n              convertCaseOptions\n            );\n          } else {\n            result[this._convertCase(key, convertCaseOptions)] = value;\n          }\n          return result;\n        },\n        {}\n      );\n    } else {\n      switch (convertCaseOptions) {\n        case 'snake_case':\n          converted = toSnakeCase(data);\n          break;\n        case 'kebab-case':\n          converted = toKebabCase(data);\n          break;\n        case 'camelCase':\n          converted = toCamelCase(data);\n          break;\n        default: // Do nothing\n      }\n    }\n\n    return converted;\n  }\n};\n"],"names":["global","undefined","setImmediate","registerImmediate","html","channel","messagePrefix","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","Object","getPrototypeOf","setTimeout","toString","call","process","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","Math","random","addEventListener","onGlobalMessage","attachEvent","MessageChannel","port1","event","data","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","callback","Function","args","Array","arguments","length","i","task","clearImmediate","apply","run","source","indexOf","slice","self","this","FUNC_ERROR_TEXT","HASH_UNDEFINED","INFINITY","MAX_SAFE_INTEGER","funcTag","genTag","symbolTag","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","reIsUint","freeGlobal","_typeof","freeSelf","root","uid","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","replace","Symbol","splice","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","index","clear","entry","set","ListCache","MapCache","assocIndexOf","array","key","eq","baseIsNative","value","isObject","func","isMasked","tag","isFunction","result","e","isHostObject","test","toSource","baseSet","object","path","customizer","objValue","isArray","type","isSymbol","isKey","stringToPath","castPath","lastIndex","nested","toKey","newValue","isIndex","getMapData","map","__data__","isKeyable","getValue","has","get","pop","push","memoize","string","baseToString","match","number","quote","resolver","TypeError","memoized","cache","Cache","other","isObjectLike","obj","defaultValue","String","split","filter","Boolean","reduce","a","c","pick","arr","acc","curr","isEmpty","val","omit","k","includes","isPlainObject","constructor","transform","fn","toKebabCase","str","x","toLowerCase","join","toSnakeCase","toCamelCase","s","toUpperCase","require$$1","validateOptions","options","assign","id","blacklist","whitelist","links","relationships","topLevelLinks","topLevelMeta","meta","blacklistOnDeserialize","whitelistOnDeserialize","jsonapiObject","Error","convertCase","unconvertCase","forEach","schema","alternativeKey","deserialize","validateDynamicTypeOptions","validateError","err","status","code","title","detail","error","linksObj","href","isValidLink","sourceObj","pointer","parameter","isValidSource","opts","schemas","extraData","included","isDynamicType","jsonapi","version","processOptionsValues","serializeMixedResource","serializeResource","size","values","isDataArray","arrayData","serializedData","that","Promise","resolve","reject","next","serializedItem","then","_this","deserializedData","resource","_this2","deserializeResource","deserializedItem","convertToError","serializedError","statusCode","message","errors","JSON","stringify","attributes","relationshipProperty","relationship","relationshipKey","_this3","_convertCase","deserializeFunction","relationshipData","d","deserializeIncluded","relationshipOpts","includedResource","find","_this4","serializeAttributes","serializeRelationships","typeOption","_this5","alternativeKeys","rOptions","serializedAttributes","serializedRelationships","relationshipOptions","serializeRelationship","_this6","rType","rSchema","rData","_this7","serializedRelationship","fallbackModeIfOneArg","processedOptions","processedValue","convertCaseOptions","converted","_this8"],"mappings":"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"}